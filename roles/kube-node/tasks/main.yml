# 创建kubelet,kube-proxy工作目录和cni配置目录
- name: 创建kube-node 相关目录
  file: name={{ item }} state=directory
  with_items:
  - /var/lib/kubelet
  - /var/lib/kube-proxy
  - /etc/cni/net.d

- name: 下载 kubelet,kube-proxy 二进制和基础 cni plugins
  copy: src={{ base_dir }}/bin/{{ item }} dest={{ bin_dir }}/{{ item }} mode=0755
  with_items:
  - kubelet
  - kube-proxy
  - bridge
  - host-local
  - loopback

##----------kubelet 配置部分--------------
# kubelet 启动时向 kube-apiserver 发送 TLS bootstrapping 请求，需要绑定该角色
# 只需单节点执行一次
- name: get clusterrolebinding info
  shell: "{{ bin_dir }}/kubectl get clusterrolebinding --all-namespaces"
  register: clusterrolebinding_info
  run_once: true
  
- name: kubelet-bootstrap-setting
  shell: "{{ bin_dir }}/kubectl create clusterrolebinding kubelet-bootstrap \
        --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap"
  run_once: True
  when: '"kubelet-bootstrap" not in clusterrolebinding_info.stdout'

- name: 安装bootstrap.kubeconfig配置文件
  copy: src=/etc/kubernetes/bootstrap.kubeconfig dest=/etc/kubernetes/bootstrap.kubeconfig  

- name: 准备 cni配置文件
  template: src=cni-default.conf.j2 dest=/etc/cni/net.d/10-default.conf

- name: 创建kubelet的systemd unit文件
  template: src=kubelet.service.j2 dest=/etc/systemd/system/kubelet.service
  tags: kubelet

- name: 开启kubelet 服务
  shell: systemctl daemon-reload && systemctl enable kubelet && systemctl restart kubelet
  tags: kubelet 

##-------kube-proxy部分----------------
- name: 安装kube-proxy.kubeconfig配置文件
  copy: src=/etc/kubernetes/kube-proxy.kubeconfig dest=/etc/kubernetes/kube-proxy.kubeconfig

- name: 创建kube-proxy 服务文件
  tags: reload-kube-proxy
  template: src=kube-proxy.service.j2 dest=/etc/systemd/system/kube-proxy.service

- name: 开启kube-proxy 服务
  tags: reload-kube-proxy
  shell: systemctl daemon-reload && systemctl enable kube-proxy && systemctl restart kube-proxy

# 批准 node 节点
- name: approve-kubelet-csr
  shell: "sleep 10 && {{ bin_dir }}/kubectl get csr|grep 'Pending' | awk 'NR>0{print $1}'| \
	xargs {{ bin_dir }}/kubectl certificate approve"
  run_once: true
  ignore_errors: true
